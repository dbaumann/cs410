class Player {
  field int xPos, yPos; //cartesian location
  field int direction; //{0->north, 1->east, 2->south, 3->west}
  field int playerId; //1=human, 2=computer
  field int randomSeed; //used by computer

  constructor Player new(int newXPos, int newYPos, int newDir, int newPlayerId, int newRandomSeed) {
    let xPos = newXPos;
    let yPos = newYPos;
    let direction = newDir;
    let playerId = newPlayerId;
    let randomSeed = newRandomSeed;
    return this;
  }

  method int xPos() {
    return xPos;
  }

  method int yPos() {
    return yPos;
  }

  method void turnNorth() {
    let direction = 0;
    return;
  }

  method void turnEast() {
    let direction = 1;
    return;
  }

  method void turnSouth() {
    let direction = 2;
    return;
  }

  method void turnWest() {
    let direction = 3;
    return;
  }

  method void makeNextMove(int time) {
    var char nextKeyPress;
    var int oppositeDirection;
    var int newDirection;

    let oppositeDirection = direction + 2 & 3;

    if(playerId = 1) { //human player; accept keyboard commands
      let nextKeyPress = Keyboard.keyPressed();

      if(nextKeyPress = 131) { let direction = 0; }
      if(nextKeyPress = 132) { let direction = 1; }
      if(nextKeyPress = 133) { let direction = 2; }
      if(nextKeyPress = 130) { let direction = 3; }
    } else { //computer player; feel ahead for barriers and avoid them
      do computerMove(time);
    }

    if(direction = oppositeDirection) { //ignore the move
      let direction = direction + 2 & 3;
    }

    return;
  }

  method void moveForward() {
    //update player position
    if(direction = 0) { let yPos = yPos - 1; }
    else {
      if(direction = 1) { let xPos = xPos + 1; }
      else {
        if(direction = 2) { let yPos = yPos + 1; }
        else {
          if(direction = 3) { let xPos = xPos - 1; }
        }
      }
    }

    return;
  }

  method void computerMove(int time) {
    var int left, right;

    let left = direction + 3 & 3;
    let right = direction + 1 & 3;

    do randomChoice(time);

    return;
  }

  method void randomChoice(int time) {
    var RAND rand;
    var Array considered;

    let rand = RAND.new(time + randomSeed & 16383);
    
    let considered = Array.new(4);
    let considered[0] = considered[1] = considered[2] = considered[3] = false;

    if(Feeler.feelInDirection(xPos, yPos, direction, 10) < 10) {
      let direction = rand.intBetween(0, 4);
      while(Feeler.feelInDirection(xPos, yPos, direction, 5) < 5) {
        if(considered[0] & considered[1] & considered[2] & considered[3]) {
          do Memory.deAlloc(rand);
          do considered.dispose();
          return;
        }
        let direction = rand.intBetween(0, 4);
        let considered[direction] = true;
      }
    }
    do Memory.deAlloc(rand);
    do considered.dispose();
    return;
  }

}